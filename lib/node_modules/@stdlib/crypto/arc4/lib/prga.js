/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var swap = require( './swap.js' );


// MAIN //

/**
* Returns a pseudorandom generation function (PRGA).
*
* @private
* @param {Uint8Array} S - byte array
* @returns {Function} pseudo-random generation function
*/
function prga( S ) {
	var len = S.length;
	var i = 0;
	var j = 0;

	return prga;

	/**
	* Returns a pseudorandom element from a permutation vector.
	*
	* ## Notes
	*
	* -   Each element of `S` is swapped with another element at least once every `N` iterations, where `N` is the length of `S`.
	*
	*
	* @private
	* @returns {uinteger8} pseudorandom element
	*/
	function prga() {
		var k;

		// Modify the permutation vector state:
		i = (i + 1) % len;
		j = (j + S[i]) % len;
		swap( S, i, j );

		// Compute the index of the element to return:
		k = (S[i] + S[j]) % len;

		return S[ k ];
	}
}


// EXPORTS //

module.exports = prga;
