/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var Uint8Array = require( '@stdlib/array/uint8' );
var ksa = require( './../lib/ksa.js' );


// FIXTURES //

var getExpectedS = require( './fixtures/ksa.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof ksa, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns a permuted byte array', function test( t ) {
	var expected;
	var S;
	var i;

	expected = new Uint8Array( getExpectedS() );

	S = ksa( 'pwd12' );

	t.equal( S instanceof Uint8Array, true, 'returns a Uint8Array' );
	t.equal( S.length, 256, 'length is 256' );
	for ( i = 0; i < S.length; i++ ) {
		t.equal( S[i], expected[i], 'element '+i+' ('+S[i]+') has expected value '+expected[i] );
	}
	t.end();
});
