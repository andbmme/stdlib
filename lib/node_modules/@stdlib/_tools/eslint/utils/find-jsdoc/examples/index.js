/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var Linter = require( 'eslint' ).Linter;
var findJSDoc = require( './../lib' );

var linter = new Linter();
var code;

/**
* ESLint rule.
*
* @private
* @param {Object} context - ESLint context
* @returns {Object} visitors
*/
function rule( context ) {
	var source = context.getSourceCode();

	return {
		'FunctionExpression:exit': log,
		'FunctionDeclaration:exit': log,
		'VariableDeclaration:exit': log,
		'ExpressionStatement:exit': log
	};

	/**
	* Logs JSDoc comments.
	*
	* @private
	* @param {ASTNode} node - node to examine
	*/
	function log( node ) {
		var jsdoc = findJSDoc( source, node );
		if ( jsdoc ) {
			console.log( jsdoc );
		}
	}
}

code = [
	'/**',
	'* Squares a number.',
	'* ',
	'* @params {number} x - input number',
	'* @returns {number} x squared',
	'*',
	'* @examples',
	'* var y = square( 2.0 );',
	'* // returns 4.0',
	'*/',
	'function square( x ) {',
	'  return x*x;',
	'}'
].join( '\n' );

linter.defineRule( 'my-rule', rule );

linter.verify( code, {
	'rules': {
		'my-rule': 'error'
	}
});
