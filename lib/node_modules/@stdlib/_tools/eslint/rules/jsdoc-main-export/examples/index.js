/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var Linter = require( 'eslint' ).Linter;
var rule = require( './../lib' );

var linter = new Linter();
var result;
var code;

code = [
	'/**',
	'* Tests if a value is an array.',
	'*',
	'* @module @stdlib/assert/isarray',
	'*',
	'* @example',
	'* var isArray = require( \'@stdlib/assert/is-aray\' );',
	'*',
	'* var bool = isArray( [] );',
	'* // returns true',
	'*',
	'* bool = isArray( {} );',
	'* // returns false',
	'*/'
].join( '\n' );

linter.defineRule( 'jsdoc-main-export', rule );

result = linter.verify( code, {
	'rules': {
		'jsdoc-main-export': 'error'
	}
}, {
	'filename': '/path/to/@stdlib/assert/is-array/lib/index.js'
});
console.log( result );
/* =>
	[
		{
			'ruleId': 'jsdoc-main-export',
			'severity': 2,
			'message': 'Begin description with `Test` instead of `Tests`',
			'line': 1,
			'column': 1,
			'nodeType': null,
			'endLine': 14,
			'endColumn': 3
		},
		{
			'ruleId': 'jsdoc-main-export',
			'severity': 2,
			'message': 'Expected `@stdlib/assert/is-array` for `@module` tag, but encountered `@stdlib/assert/isarray`',
			'line': 1,
			'column': 1,
			'nodeType': null,
			'endLine': 14,
			'endColumn': 3
		},
		{
			'ruleId': 'jsdoc-main-export',
			'severity': 2,
			'message': 'Example code of main export should first require `@stdlib/assert/is-array`, but encountered `@stdlib/assert/is-aray`',
			'line': 1,
			'column': 1,
			'nodeType': null,
			'endLine': 14,
			'endColumn': 3 } ]
		}
	]
*/
