/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var Linter = require( 'eslint' ).Linter;
var rule = require( './../lib' );

var linter = new Linter();
var result;

var code = [
	'/**',
	'* Comparator function for sorting characters in ascending order.',
	'*',
	'* @param {string} a - character',
	'* @param {string} b - character',
	'* @returns {number} comparison value',
	'*/',
	'function ascending( a, b ) {',
	'  if ( a < b ) {',
	'    return -1;',
	'  }',
	'  if ( a === b ) {',
	'    return 0;',
	'  }',
	'  return 1;',
	'}',
	'',
	'var arr = [ 3, 1, 6, 12, 9, 2 ];',
	'',
	'module.exports = arr.sort( ascending );'
].join( '\n' );

linter.defineRule( 'jsdoc-private-annotation', rule );

result = linter.verify( code, {
	'rules': {
		'jsdoc-private-annotation': [ 'error' ]
	}
});
console.log( result );
/* =>
	[
		{
			'ruleId': 'jsdoc-private-annotation',
			'severity': 2,
			'message': '`ascending` is missing a @private annotation',
			'line': 8,
			'column': 1,
			'nodeType': 'FunctionDeclaration',
			'source': 'function ascending( a, b ) {',
			'endLine': 16,
			'endColumn': 2
		}
	]
*/
