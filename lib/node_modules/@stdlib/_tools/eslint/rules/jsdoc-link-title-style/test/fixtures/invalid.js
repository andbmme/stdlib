/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// VARIABLES //

var invalid;
var test;


// MAIN //

// Create our test cases:
invalid = [];

test = {
	'code': [
		'/**',
		'* Beep boop.',
		'*',
		'* ## Links',
		'*',
		'* -   [stdlib](https://stdlib.io/ "stdlib")',
		'* -   [example](https://example.com/ \'Example Domain\')',
		'*',
		'* @param {string} str - input value',
		'* @returns {string} output value',
		'*',
		'* @example',
		'* var out = beep( "boop" );',
		'* // returns "beepboop"',
		'*/',
		'function beep( str ) {',
		'    return "beep" + str;',
		'}'
	].join( '\n' ),
	'errors': [
		{
			'message': 'Titles should use `"` as a quote',
			'type': null
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'/**',
		'* Beep boop.',
		'*',
		'* ## Links',
		'*',
		'* -   [stdlib](https://stdlib.io/ "stdlib")',
		'* -   [example](https://example.com/ \'Example Domain\')',
		'*',
		'* @param {string} str - input value',
		'* @returns {string} output value',
		'*',
		'* @example',
		'* var out = beep( "boop" );',
		'* // returns "beepboop"',
		'*/',
		'function beep( str ) {',
		'    return "beep" + str;',
		'}'
	].join( '\n' ),
	'options': [ 'consistent' ],
	'errors': [
		{
			'message': 'Titles should use `"` as a quote',
			'type': null
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'/**',
		'* Beep boop.',
		'*',
		'* ## Links',
		'*',
		'* -   [example](https://example.com/ \'Example Domain\')',
		'*',
		'* @param {string} str - input value',
		'* @returns {string} output value',
		'*',
		'* @example',
		'* var out = beep( "boop" );',
		'* // returns "beepboop"',
		'*/',
		'function beep( str ) {',
		'    return "beep" + str;',
		'}'
	].join( '\n' ),
	'options': [ '"' ],
	'errors': [
		{
			'message': 'Titles should use `"` as a quote',
			'type': null
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'/**',
		'* Beep boop.',
		'*',
		'* ## Links',
		'*',
		'* -   [example](https://example.com/ "Example Domain")',
		'*',
		'* @param {string} str - input value',
		'* @returns {string} output value',
		'*',
		'* @example',
		'* var out = beep( "boop" );',
		'* // returns "beepboop"',
		'*/',
		'function beep( str ) {',
		'    return "beep" + str;',
		'}'
	].join( '\n' ),
	'options': [ '\'' ],
	'errors': [
		{
			'message': 'Titles should use `\'` as a quote',
			'type': null
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'/**',
		'* Beep boop.',
		'*',
		'* ## Links',
		'*',
		'* -   [example](https://example.com/ "Example Domain")',
		'*',
		'* @param {string} str - input value',
		'* @returns {string} output value',
		'*',
		'* @example',
		'* var out = beep( "boop" );',
		'* // returns "beepboop"',
		'*/',
		'function beep( str ) {',
		'    return "beep" + str;',
		'}'
	].join( '\n' ),
	'options': [ '()' ],
	'errors': [
		{
			'message': 'Titles should use `()` as a quote',
			'type': null
		}
	]
};
invalid.push( test );


// EXPORTS //

module.exports = invalid;
