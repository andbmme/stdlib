/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var invalid = [];
var test;

test = {
	'code': [
		'var y;',
		'var y;'
	].join( '\n' ),
	'errors': [
		{
			'message': 'y is already defined',
			'type': 'Identifier'
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'// VARIABLES //',
		'',
		'var x = 2;',
		'var x = 4;'
	].join( '\n' ),
	'errors': [
		{
			'message': 'x is already defined',
			'type': 'Identifier'
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'var Object = 0;'
	].join( '\n' ),
	'options': [{
		'builtinGlobals': true
	}],
	'errors': [
		{
			'message': 'Object is already defined',
			'type': 'Identifier'
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'/* global Float64Array */',
		'',
		'// MODULES //',
		'',
		'var Float64Array = require( \'@stdlib/array/float64\' );'
	].join( '\n' ),
	'options': [{
		'builtinGlobals': true
	}],
	'errors': [
		{
			'message': 'Float64Array is already defined',
			'type': 'Identifier'
		}
	]
};
invalid.push( test );

test = {
	'code': [
		'/* global Float64Array */',
		'',
		'// MODULES //',
		'',
		'var Float64Array = require( \'@stdlib/array/float64\' );',
		'var Float64Array = require( \'@stdlib/array/float64\' );'
	].join( '\n' ),
	'options': [{
		'builtinGlobals': false
	}],
	'errors': [
		{
			'message': 'Float64Array is already defined',
			'type': 'Identifier'
		}
	]
};
invalid.push( test );


// EXPORTS //

module.exports = invalid;
