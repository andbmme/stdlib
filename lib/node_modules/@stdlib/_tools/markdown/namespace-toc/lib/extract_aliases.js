/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var doctrine = require( 'doctrine' );
var logger = require( 'debug' );


// VARIABLES //

var RE_LINK = /\{@link module:([^}]*)\}/;
var RE_JSDOC = /\/\*\*\n((\*[^/])[^*]*)*\*\//g;
var DOPTS = {
	'unwrap': true,
	'sloppy': true,
	'tags': [ 'see', 'name' ]
};
var debug = logger( 'markdown-namespace-toc:extract-aliases' );


// MAIN //

/**
* Retrieves aliases from a namespace index file.
*
* @private
* @param {string} ns - namespace code string
* @returns {Object} table mapping package names to aliases
*/
function extractAliases( ns ) {
	var matches;
	var jsdoc;
	var title;
	var name;
	var tags;
	var out;
	var pkg;
	var i;
	var j;

	out = {};
	matches = ns.match( RE_JSDOC );
	for ( i = 0; i < matches.length; i++ ) {
		name = null;
		pkg = null;
		jsdoc = doctrine.parse( matches[ i ], DOPTS );
		tags = jsdoc.tags;
		debug( 'JSDoc tags: %s', JSON.stringify( tags ) );
		for ( j = 0; j < tags.length; j++ ) {
			title = tags[ j ].title;
			if ( title === 'name' ) {
				name = tags[ j ].name;
			}
			else if ( title === 'see' ) {
				pkg = tags[ j ].description.match( RE_LINK )[ 1 ];
			}
		}
		if ( pkg && name ) {
			out[ pkg ] = name;
		}
	}
	return out;
}


// EXPORTS //

module.exports = extractAliases;
