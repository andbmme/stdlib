#/
# @license Apache-2.0
#
# Copyright (c) 2017 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# After changing this file, check it on:
#
#   http://lint.travis-ci.org/
#
# Known lint bugs:
#
# -   add-ons: https://github.com/travis-ci/travis-yaml/issues/58
# -   osx: https://github.com/travis-ci/travis-yaml/issues/95

language: node_js

# Is `sudo` required? If not, jobs are run on container-based infrastructure.
sudo: true

node_js:
  # Node.js
  - 'node'
  - '9'
  - '8'
  - '7'
  - '6'
  - '5'
  - '4'
  # io.js
  - '3'
  - '2'
  - '1'
  # Node.js
  - '0.12'
  - '0.10'


os:
  - linux
  - osx

# Compiling native modules for io.js v3.x.x or Node.js >=v4.0.0 requires a C++11 standard-compliant compiler. Specifically, either gcc >=4.8 or clang >=3.5. Add-ons are Linux-specific. Electron requires a virtual display server (xvfb) on Linux.
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - binutils
      - gcc-5
      - gcc-5-multilib
      - g++-5
      - g++-5-multilib
      - gfortran-5
      - gfortran-5-multilib
      - xvfb
      - unzip


env:
  # Environment variables common to all jobs:
  global:
    - FC=gfortran
    - FORTRAN_COMPILER=gfortran
    - CC=gcc
    - C_COMPILER=gcc
    - CXX=g++
    - CXX_COMPILER=g++
    - LINKER=g++
    - NODE_PATH="$TRAVIS_BUILD_DIR/lib/node_modules"

  # Environment variables used to construct build matrix:
  matrix:
    - BUILD_TASK='test'
    - BUILD_TASK='benchmark'
    - BUILD_TASK='examples'
    - BUILD_TASK='test-coverage'


matrix:
  # Flag to immediately finish a build if any one of the jobs fails:
  fast_finish: true


# Set the clone depth:
git:
  depth: 100


before_install:
  # Perform platform-specific initialization:
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      mkdir -p $HOME/bin;
      ln -s /usr/bin/gcc-5 $HOME/bin/gcc;
      ln -s /usr/bin/g++-5 $HOME/bin/g++;
      ln -s /usr/bin/gfortran-5 $HOME/bin/gfortran;
    else
      brew cask uninstall oclint;
      brew update;
      brew install -v gcc;
    fi

  # Configure the virtual display server (needed for electron):
  - export DISPLAY=':99.0'
  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

  # Print debug info:
  - echo "$($CC --version)"
  - echo "$($CXX --version)"
  - echo "$($FC --version)"

  - git --version

  - file $(which node)
  - node --version
  - node -p 'process.platform + "@" + process.arch'

  - npm --version
  - npm config get registry

  # Run pre-install tasks:
  - chmod +x ./tools/ci/travis/before_install
  - "./tools/ci/travis/before_install"


install:
  # Run install tasks via `travis_retry` to address occasional `npm install` failures (see https://docs.travis-ci.com/user/common-build-problems/#travis_retry):
  - "travis_retry make FC=$FC FORTRAN_COMPILER=$FORTRAN_COMPILER install"


script:
  - chmod +x ./tools/ci/travis/script
  - "./tools/ci/travis/script $BUILD_TASK"


after_script:
  - chmod +x ./tools/ci/travis/after_script
  - "./tools/ci/travis/after_script"
