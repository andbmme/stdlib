/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var startsWith = require( '@stdlib/string/starts-with' );
var isCapitalized = require( '@stdlib/assert/is-capitalized' );
var endsWith = require( '@stdlib/string/ends-with' );


// VARIABLES //

var RE_NUM_SPECIAL = /^[\d`]/;


// MAIN //

/**
* Rule for enforcing styling of tag descriptions.
*
* @param {Context} context - lint context
* @returns {Object} validators
*/
function main( context ) {
	var whitelist;
	var opts;

	opts = context.options[ 0 ];
	whitelist = opts.whitelist || [];

	/**
	* Checks whether style rules for tag descriptions are obeyed.
	*
	* @private
	* @param {Object} section - parameters or returns section
	*/
	function tagDescriptionStyle( section ) {
		var desc;
		var tags;
		var i;

		tags = section.tags;
		if ( tags ) {
			for ( i = 0; i < tags.length; i++ ) {
				desc = tags[ i ].description;
				if ( !endsWith( desc, '.' ) ) {
					context.report( 'Tag description must end with a period', section );
				}
				if ( !hasValidStart( desc ) ) {
					context.report( 'Tag description must be capitalized', section );
				}
			}
		}
	}
	return {
		'parameters': tagDescriptionStyle,
		'returns': tagDescriptionStyle
	};

	/**
	* Checks whether a tag description starts with a capitalized letter or number (save for exceptions such as proper nouns).
	*
	* @private
	* @param {string} desc - tag description
	* @returns {boolean} boolean indicating whether tag description is valid
	*/
	function hasValidStart( desc ) {
		var found;
		var word;
		var i;

		if ( !isCapitalized( desc ) && !desc.match( RE_NUM_SPECIAL ) ) {
			// Check whether description starts with a word from the whitelist:
			found = false;
			for ( i = 0; i < whitelist.length; i++ ) {
				word = whitelist[ i ];
				if ( startsWith( desc, word+' ' ) ) {
					found = true;
					break;
				}
			}
			// If not, raise an error:
			if ( !found ) {
				return false;
			}
		}
		return true;
	}
}


// EXPORTS //

module.exports = main;
