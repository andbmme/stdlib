/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var startsWith = require( '@stdlib/string/starts-with' );


// MAIN //

/**
* Extracts the first function signature from the supplied string.
*
* @private
* @param {string} str - first line of a `repl.txt` function documentation
* @returns {Object} function signature object with `name`, `parameters`, and `raw` keys
*/
function extractSignature( str ) {
	var optional;
	var params;
	var param;
	var state;
	var name;
	var ch;
	var i;

	state = 'name';
	name = '';
	params = [];
	optional = false;
	for ( i = 0; i < str.length; i++ ) {
		ch = str.charAt( i );
		switch ( state ) {
		default:
		case 'name':
			if ( ch === '(' ) {
				state = 'params';
			} else {
				name += ch;
			}
			break;
		case 'params':
			if ( ch === ')' ) {
				if ( param && param.name !== '' ) {
					if ( startsWith( param.name, '...' ) ) {
						param.multiple = true;
						param.name = param.name.substr( 3 );
					}
					params.push( param );
				}
			}
			else if ( ch === '[' ) {
				optional = true;
			}
			else if ( ch === ']' ) {
				optional = false;
			}
			else if ( ch === ',' ) {
				if ( startsWith( param.name, '...' ) ) {
					param.multiple = true;
					param.name = param.name.substr( 3 );
				}
				params.push( param );
				param = null;
			} else if ( ch !== ' ' ) {
				if ( param ) {
					param.name += ch;
				} else {
					param = {
						'name': ch,
						'optional': optional
					};
				}
			}
		}
	}

	return {
		'name': name,
		'parameters': params,
		'raw': str
	};
}


// EXPORTS //

module.exports = extractSignature;
