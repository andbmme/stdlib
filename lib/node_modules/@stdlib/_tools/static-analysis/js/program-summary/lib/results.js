/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns an initialized `results` object.
*
* @private
* @returns {Object} results object
*
* @example
* var o = results();
* // returns {...}
*/
function results() {
	var out = {
		'length': 0,
		'whitespace': 0,
		'lines': 0,
		'empty': 0,
		'sloc': 0,
		'lloc': 0,
		'scope': 0,
		'depth': 0,
		'statements': 0,
		'branches': 0,
		'comments': {
			'count': 0,
			'length': 0,
			'whitespace': 0,
			'lines': 0,
			'inline': 0,
			'block': {
				'count': 0,
				'length': 0,
				'whitespace': 0,
				'lines': 0,
				'inline': 0
			},
			'line': {
				'count': 0,
				'length': 0,
				'whitespace': 0,
				'lines': 0,
				'inline': 0
			},
			'jsdoc': {
				'count': 0,
				'length': 0,
				'whitespace': 0,
				'lines': 0,
				'inline': 0
			},
			'data': []
		},
		'dowhile': {
			'count': 0,
			'data': []
		},
		'expressions': {
			'array': 0,
			'assignment': 0,
			'binary': 0,
			'call': 0,
			'conditional': 0,
			'function': 0,
			'logical': 0,
			'member': 0,
			'new': 0,
			'object': 0,
			'sequence': 0,
			'this': 0,
			'unary': 0,
			'update': 0,
			'yield': 0
		},
		'for': {
			'count': 0,
			'data': []
		},
		'forin': {
			'count': 0,
			'data': []
		},
		'forof': {
			'count': 0,
			'data': []
		},
		'function': {
			'count': 0,
			'data': []
		},
		'if': {
			'count': 0,
			'data': []
		},
		'literal': {
			'count': 0,
			'data': []
		},
		'switch': {
			'count': 0,
			'data': []
		},
		'throw': 0,
		'try': {
			'count': 0,
			'data': []
		},
		'variable': {
			'count': 0,
			'data': []
		},
		'while': {
			'count': 0,
			'data': []
		}
	};
	return out;
}


// EXPORTS //

module.exports = results;
