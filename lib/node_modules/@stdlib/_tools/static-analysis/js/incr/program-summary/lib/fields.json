[
	[ "length", "length", "program length" ],
	[ "whitespace", "whitespace", "program whitespace" ],
	[ "lines", "lines", "program lines" ],
	[ "empty", "empty", "program empty lines" ],
	[ "sloc", "sloc", "program source lines of codes (SLOC)" ],
	[ "lloc", "lloc", "program logical lines of code (LLOC)" ],
	[ "statements", "statements", "number of program statements" ],
	[ "branches", "branches", "number of program branches" ],
	[ "comments.count", "comments.count", "number of program comments" ],
	[ "comments.length", "comments.length", "total character length of program comments" ],
	[ "comments.whitespace", "comments.whitespace", "amount of whitespace in program comments" ],
	[ "comments.lines", "comments.lines", "number of program comment lines" ],
	[ "comments.inline", "comments.inline", "number of program inline comments" ],
	[ "comments.block.count", "comments.block.count", "number of program block comments" ],
	[ "comments.block.length", "comments.block.length", "total character length of program block comments" ],
	[ "comments.block.whitespace", "comments.block.whitespace", "amount of whitespace in program block comments" ],
	[ "comments.block.lines", "comments.block.lines", "number of program block comment lines" ],
	[ "comments.block.inline", "comments.block.inline", "number of program inline block comments" ],
	[ "comments.block.data.length", "comments.[data].{length,type='block'}", "character length of individual block comments" ],
	[ "comments.block.data.whitespace", "comments.[data].{whitespace,type='block'}", "amount of whitespace in individual block comments" ],
	[ "comments.block.data.lines", "comments.[data].{lines,type='block'}", "number of lines in individual block comments" ],
	[ "comments.line.count", "comments.line.count", "number of program line comments" ],
	[ "comments.line.length", "comments.line.length", "total character length of program line comments" ],
	[ "comments.line.whitespace", "comments.line.whitespace", "amount of whitespace in program line comments" ],
	[ "comments.line.lines", "comments.line.lines", "number of program line comment lines" ],
	[ "comments.line.inline", "comments.line.inline", "number of program inline line comments" ],
	[ "comments.line.data.length", "comments.[data].{length,type='line'}", "character length of individual line comments" ],
	[ "comments.line.data.whitespace", "comments.[data].{whitespace,type='line'}", "amount of whitespace in individual line comments" ],
	[ "comments.line.data.lines", "comments.[data].{lines,type='line'}", "number of lines in individual line comments" ],
	[ "comments.jsdoc.count", "comments.jsdoc.count", "number of program JSDoc comments" ],
	[ "comments.jsdoc.length", "comments.jsdoc.length", "total character length of program JSDoc comments" ],
	[ "comments.jsdoc.whitespace", "comments.jsdoc.whitespace", "amount of whitespace in program JSDoc comments" ],
	[ "comments.jsdoc.lines", "comments.jsdoc.lines", "number of lines in program JSDoc comments" ],
	[ "comments.jsdoc.inline", "comments.jsdoc.inline", "number of inline program JSDoc comments" ],
	[ "comments.jsdoc.data.length", "comments.[data].{length,jsdoc=true}", "character length of individual JSDoc comments" ],
	[ "comments.jsdoc.data.whitespace", "comments.[data].{whitespace,jsdoc=true}", "amount of whitespace in individual JSDoc comments" ],
	[ "comments.jsdoc.data.lines", "comments.[data].{lines,jsdoc=true}", "number of lines in individual JSDoc comments" ],
	[ "dowhile.count", "dowhile.count", "number of `do...while` statements in a program" ],
	[ "dowhile.length", "dowhile.[data].length", "character length of individual `do...while` statements" ],
	[ "dowhile.whitespace", "dowhile.[data].whitespace", "amount of whitespace in individual `do...while` statements" ],
	[ "dowhile.lines", "dowhile.[data].lines", "number of lines in individual `do...while` statements" ],
	[ "dowhile.empty", "dowhile.[data].empty", "number of empty lines in individual `do...while` statements" ],
	[ "dowhile.sloc", "dowhile.[data].sloc", "source lines of code (SLOC) in individual `do...while` statements" ],
	[ "dowhile.lloc", "dowhile.[data].lloc", "logical lines of code (LLOC) in individual `do...while` statements" ],
	[ "dowhile.scope", "dowhile.[data].scope", "function scope level for individual `do...while` statements" ],
	[ "dowhile.depth", "dowhile.[data].depth", "nesting depth for individual `do...while` statements" ],
	[ "dowhile.statements", "dowhile.[data].statements", "number of statements in individual `do...while` statements" ],
	[ "dowhile.branches", "dowhile.[data].branches", "number of branches in individual `do...while` statements" ],
	[ "dowhile.throw", "dowhile.[data].throw", "number of `throw` statements in individual `do...while` statements" ],
	[ "dowhile.literal.count", "dowhile.[data].literal.count", "number of literals in individual `do...while` statements" ],
	[ "expressions.array", "expressions.array", "number of array expressions in a program" ],
	[ "expressions.assignment", "expressions.assignment", "number of assignment expressions in a program" ],
	[ "expressions.binary", "expressions.binary", "number of binary expressions in a program" ],
	[ "expressions.call", "expressions.call", "number of call expressions in a program" ],
	[ "expressions.conditional", "expressions.conditional", "number of conditional expressions in a program" ],
	[ "expressions.function", "expressions.function", "number of function expressions in a program" ],
	[ "expressions.logical", "expressions.logical", "number of logical expressions in a program" ],
	[ "expressions.member", "expressions.member", "number of member expressions in a program" ],
	[ "expressions.new", "expressions.new", "number of `new` expressions in a program" ],
	[ "expressions.object", "expressions.object", "number of object expressions in a program" ],
	[ "expressions.sequence", "expressions.sequence", "number of sequence expressions in a program" ],
	[ "expressions.this", "expressions.this", "number of `this` expressions in a program" ],
	[ "expressions.unary", "expressions.unary", "number of unary expressions in a program" ],
	[ "expressions.update", "expressions.update", "number of update expressions in a program" ],
	[ "expressions.yield", "expressions.yield", "number of `yield` expressions in a program" ],
	[ "for.count", "for.count", "number of `for` statements in a program" ],
	[ "for.length", "for.[data].length", "character length of individual `for` statements" ],
	[ "for.whitespace", "for.[data].whitespace", "amount of whitespace in individual `for` statements" ],
	[ "for.lines", "for.[data].lines", "number of lines in individual `for` statements" ],
	[ "for.empty", "for.[data].empty", "number of empty lines in individual `for` statements" ],
	[ "for.sloc", "for.[data].sloc", "source lines of code (SLOC) in individual `for` statements" ],
	[ "for.lloc", "for.[data].lloc", "logical lines of code (LLOC) in individual `for `statements" ],
	[ "for.scope", "for.[data].scope", "function scope level for individual `for` statements" ],
	[ "for.depth", "for.[data].depth", "nesting depth for individual `for` statements" ],
	[ "for.statements", "for.[data].statements", "number of statements in individual `for` statements" ],
	[ "for.branches", "for.[data].branches", "number of branches in individual `for` statements" ],
	[ "for.literal.count", "for.[data].literal.count", "number of literals in individual `for` statements" ],
	[ "for.throw", "for.[data].throw", "number of `throw` statements in individual `for` statements" ],
	[ "forin.count", "forin.count", "number of `for...in` statements in a program" ],
	[ "forin.length", "forin.[data].length", "character length of individual `for...in` statements" ],
	[ "forin.whitespace", "forin.[data].whitespace", "amount of whitespace in individual `for...in` statements" ],
	[ "forin.lines", "forin.[data].lines", "number of lines in individual `for...in` statements" ],
	[ "forin.empty", "forin.[data].empty", "number of empty lines in individual `for...in` statements" ],
	[ "forin.sloc", "forin.[data].sloc", "source lines of code (SLOC) in individual `for...in` statements" ],
	[ "forin.lloc", "forin.[data].lloc", "logical lines of code (LLOC) in individual `for...in` statements" ],
	[ "forin.scope", "forin.[data].scope", "function scope level for individual `for...in` statements" ],
	[ "forin.depth", "forin.[data].depth", "nesting depth for individual `for...in` statements" ],
	[ "forin.statements", "forin.[data].statements", "number of statements in individual `for...in` statements" ],
	[ "forin.branches", "forin.[data].branches", "number of branches in individual `for...in` statements" ],
	[ "forin.literal.count", "forin.[data].literal.count", "number of literals in individual `for...in` statements" ],
	[ "forin.throw", "forin.[data].throw", "number of `throw` statements in individual `for...in` statements" ],
	[ "forof.count", "forof.count", "number of `for...of` statements in a program" ],
	[ "forof.length", "forof.[data].length", "character length of individual `for...of` statements" ],
	[ "forof.whitespace", "forof.[data].whitespace", "amount of whitespace in individual `for...of` statements" ],
	[ "forof.lines", "forof.[data].lines", "number of lines in individual `for...of` statements" ],
	[ "forof.empty", "forof.[data].empty", "number of empty lines in individual `for...of` statements" ],
	[ "forof.sloc", "forof.[data].sloc", "source lines of code (SLOC) in individual `for...of` statements" ],
	[ "forof.lloc", "forof.[data].lloc", "logical lines of code (LLOC) in individual `for...of` statements" ],
	[ "forof.scope", "forof.[data].scope", "function level scope of individual `for...of` statements" ],
	[ "forof.depth", "forof.[data].depth", "nesting depth of individual `for...of` statements" ],
	[ "forof.statements", "forof.[data].statements", "number of statements in individual `for...of` statements" ],
	[ "forof.branches", "forof.[data].branches", "number of branches in individual `for...of` statements" ],
	[ "forof.literal.count", "forof.[data].literal.count", "number of literals in individual `for...of` statements" ],
	[ "forof.throw", "forof.[data].throw", "number of `throw` statements in individual `for...of` statements" ],
	[ "function.count", "function.count", "number of functions in a program" ],
	[ "function.declaration", "function.[data].type.<'declaration'>", "number of functions which are function declarations" ],
	[ "function.expression", "function.[data].type.<'expression'>", "number of functions which are function expressions" ],
	[ "function.length", "function.[data].length", "character length of individual functions" ],
	[ "function.whitespace", "function.[data].whitespace", "amount of whitespace in individual functions" ],
	[ "function.lines", "function.[data].lines", "number of lines in individual functions" ],
	[ "function.empty", "function.[data].empty", "number of empty lines in individual functions" ],
	[ "function.sloc", "function.[data].sloc", "source lines of code (SLOC) in individual functions" ],
	[ "function.lloc", "function.[data].lloc", "logical lines of code (LLOC) in individual functions" ],
	[ "function.scope", "function.[data].scope", "function scope of individual functions" ],
	[ "function.depth", "function.[data].depth", "nesting depth of individual functions" ],
	[ "function.statements", "function.[data].statements", "number of statements in individual functions" ],
	[ "function.branches", "function.[data].branches", "number of branches in individual functions" ],
	[ "function.literal.count", "function.[data].literal.count", "number of literals in individual functions" ],
	[ "function.throw", "function.[data].throw", "number of `throw` statements in individual functions" ],
	[ "function.variable.count", "function.[data].variable.count", "number of variable declarations in individual functions" ],
	[ "function.variable.nlength", "function.[data].variable.[data].name.length", "length of declared variables in individual functions" ],
	[ "function.nlength", "function.[data].name.length", "function name length for individual functions" ],
	[ "function.params", "function.[data].params", "number of function parameters for individual functions" ],
	[ "if.count", "if.count", "number of `if` statements in a program" ],
	[ "if.length", "if.[data].length", "character length of individual `if` statements" ],
	[ "if.whitespace", "if.[data].whitespace", "amount of whitespace in individual `if` statements" ],
	[ "if.lines", "if.[data].lines", "number of lines in individual `if` statements" ],
	[ "if.empty", "if.[data].empty", "number of empty lines in individual `if` statements" ],
	[ "if.sloc", "if.[data].sloc", "source lines of code (SLOC) in individual `if` statements" ],
	[ "if.lloc", "if.[data].lloc", "logical lines of code (LLOC) in individual `if` statements" ],
	[ "if.scope", "if.[data].scope", "function scope level for individual `if` statements" ],
	[ "if.depth", "if.[data].depth", "nesting depth of individual `if` statements" ],
	[ "if.statements", "if.[data].statements", "number of statements in individual `if` statements" ],
	[ "if.branches", "if.[data].branches", "number of branches in individual `if` statements" ],
	[ "if.literal.count", "if.[data].literal.count", "number of literals in individual `if` statements" ],
	[ "if.throw", "if.[data].throw", "number of `throw` statements in individual `if` statements" ],
	[ "literal.count", "literal.count", "number of literals in a program" ],
	[ "switch.count", "switch.count", "number of `switch` statements in a program" ],
	[ "switch.length", "switch.[data].length", "character length of individual `switch` statements" ],
	[ "switch.whitespace", "switch.[data].whitespace", "amount of whitespace in individual `switch` statements" ],
	[ "switch.lines", "switch.[data].lines", "number of lines in individual `switch` statements" ],
	[ "switch.empty", "switch.[data].empty", "number of empty lines in individual `switch` statements" ],
	[ "switch.sloc", "switch.[data].sloc", "source lines of code (SLOC) in individual `switch` statements" ],
	[ "switch.lloc", "switch.[data].lloc", "logical lines of code (LLOC) in individual `switch` statements" ],
	[ "switch.scope", "switch.[data].scope", "function scope of individual `switch` statements" ],
	[ "switch.depth", "switch.[data].depth", "nesting depth of individual `switch` statements" ],
	[ "switch.statements", "switch.[data].statements", "number of statements in individual `switch` statements" ],
	[ "switch.branches", "switch.[data].branches", "number of branches in individual `switch` statements" ],
	[ "switch.literal.count", "switch.[data].literal.count", "number of literals in individual `switch` statements" ],
	[ "switch.throw", "switch.[data].throw", "number of `throw` statements in individual `switch` statements" ],
	[ "switch.case", "switch.[data].case", "number of `case` clauses in individual `switch` statements" ],
	[ "throw", "throw", "number of `throw` statements in a program" ],
	[ "try.count", "try.count", "number of `try` statements in a program" ],
	[ "try.length", "try.[data].length", "character length of individual `try` statements" ],
	[ "try.whitespace", "try.[data].whitespace", "amount of whitespace in individual `try` statements" ],
	[ "try.lines", "try.[data].lines", "number of lines in individual `try` statements" ],
	[ "try.empty", "try.[data].empty", "number of empty lines in individual `try` statements" ],
	[ "try.sloc", "try.[data].sloc", "source lines of code (SLOC) in individual `try` statements" ],
	[ "try.lloc", "try.[data].lloc", "logical lines of code (LLOC) in individual `try` statements" ],
	[ "try.scope", "try.[data].scope", "function scope of individual `try` statements" ],
	[ "try.depth", "try.[data].depth", "nesting depth of individual `try` statements" ],
	[ "try.statements", "try.[data].statements", "number of statements in individual `try` statements" ],
	[ "try.branches", "try.[data].branches", "number of branches in individual `try` statements" ],
	[ "try.literal.count", "try.[data].literal.count", "number of literals in individual `try` statements" ],
	[ "try.throw", "try.[data].throw", "number of `throw` statements in individual `try` statements" ],
	[ "variable.count", "variable.count", "number of variables in a program" ],
	[ "variable.nlength", "variable.[data].name.length", "length of variable names in a program" ],
	[ "while.count", "while.count", "number of `while` statements in a program" ],
	[ "while.length", "while.[data].length", "character length of individual `while` statements" ],
	[ "while.whitespace", "while.[data].whitespace", "amount of whitespace in individual `while` statements" ],
	[ "while.lines", "while.[data].lines", "number of lines in individual `while` statements" ],
	[ "while.empty", "while.[data].empty", "number of empty lines in individual `while` statements" ],
	[ "while.sloc", "while.[data].sloc", "source lines of code (SLOC) in individual `while` statements" ],
	[ "while.lloc", "while.[data].lloc", "logical lines of code (LLOC) in individual `while` statements" ],
	[ "while.scope", "while.[data].scope", "function scope for individual `while` statements" ],
	[ "while.depth", "while.[data].depth", "nesting depth of individual `while` statements" ],
	[ "while.statements", "while.[data].statements", "number of statements in individual `while` statements" ],
	[ "while.branches", "while.[data].branches", "number of branches in individual `while` statements" ],
	[ "while.literal.count", "while.[data].literal.count", "number of literals in individual `while` statements" ],
	[ "while.throw", "while.[data].throw", "number of `throw` statements in individual `while` statements" ]
]
