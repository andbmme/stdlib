/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var logger = require( 'debug' );
var exists = require( '@stdlib/fs/exists' );


// VARIABLES //

var debug = logger( 'search-create:get-existing' );


// MAIN //

/**
* Filters out non-existing file paths.
*
* @private
* @param {StringArray} files - file paths
* @param {Callback} clbk - callback function
*/
function getExisting( files, clbk ) {
	var out = [];
	var i = 0;

	exists( files[ i ], onDone );

	/**
	* Appends path to output array in case the file exists. Once all checks have completed, the callback is invoked.
	*
	* @private
	* @param {(Error|null)} error - error object
	* @param {boolean} bool - boolean indicating if file
	* @returns {void}
	*/
	function onDone( error, bool ) {
		if ( error ) {
			debug( 'Encountered an error when checking if a file exists: %s', error.message );
		}
		if ( bool ) {
			out.push( files[ i ] );
		}
		i += 1;
		if ( i === files.length ) {
			if ( out.length === 0 ) {
				return clbk( new Error( 'None of the README.md files exist.' ) );
			}
			return clbk( null, out );
		}
		exists( files[ i ], onDone );
	}
}


// EXPORTS //

module.exports = getExisting;
