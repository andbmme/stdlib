/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var logger = require( 'debug' );
var pkgDeps = require( '@stdlib/_tools/modules/pkg-deps' );
var transform = require( './transform.js' );


// VARIABLES //

var debug = logger( 'pkg-deps:async:resolve' );


// MAIN //

/**
* Resolves package dependencies.
*
* @private
* @param {(ObjectArray)} entries - package entry points
* @param {boolean} builtins - boolean indicating whether to include built-in package dependencies
* @param {Callback} clbk - callback to invoke after resolving package dependencies
*/
function resolve( entries, builtins, clbk ) {
	var errFLG;
	var count;
	var cache;
	var opts;
	var len;
	var i;

	len = entries.length;
	count = 0;
	cache = new Array( len );

	opts = {
		'walk': true,
		'builtins': builtins
	};
	debug( 'Options: %s', JSON.stringify( opts ) );

	debug( 'Resolving %d packages...', len );
	for ( i = 0; i < len; i++ ) {
		cache[ i ] = {
			'pkg': entries[ i ].pkg,
			'dir': entries[ i ].dir
		};
		debug( 'Resolving package: %s (%d of %d)...', entries[ i ].pkg, i+1, len );
		pkgDeps( entries[ i ].entries, opts, getClbk( i ) );
	}

	/**
	* Returns a callback to be invoked upon resolving package dependencies.
	*
	* @private
	* @param {NonNegativeInteger} idx - index
	* @returns {Callback} callback
	*/
	function getClbk( idx ) {
		var pkg = entries[ idx ].pkg;
		var k = idx + 1;
		return onDeps;
		/**
		* Callback invoked upon resolving dependencies.
		*
		* @private
		* @param {(Error|null)} error - error object
		* @param {ObjectArray} results - results
		* @returns {void}
		*/
		function onDeps( error, results ) {
			if ( errFLG ) {
				return;
			}
			if ( error ) {
				debug( 'Encountered an error when resolving package dependencies: %s (%d of %d). Error: %s', pkg, k, len, error.message );
				errFLG = true;
				return clbk( error );
			}
			debug( 'Successfully resolved package dependencies: %s (%d of %d).', pkg, k, len );

			results = transform( results );
			cache[ idx ].files = results.files;
			cache[ idx ].deps = results.deps;

			count += 1;
			debug( 'Resolved %d of %d packages.', count, len );
			if ( count === len ) {
				return clbk( null, cache );
			}
		}
	}
}


// EXPORTS //

module.exports = resolve;
