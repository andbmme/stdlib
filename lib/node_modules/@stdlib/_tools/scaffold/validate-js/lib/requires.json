{
	"Array": "require( '@stdlib/assert/is-array' );",
	"ArrayArray": "require( '@stdlib/assert/is-array-array' );",
	"ArrayLike": "require( '@stdlib/assert/is-array-like' );",
	"ArrayLikeObject": "require( '@stdlib/assert/is-array-like-object' );",
	"BinaryString": "require( '@stdlib/assert/is-binary-string' );",
	"boolean": "require( '@stdlib/assert/is-boolean' ).isPrimitive;",
	"BooleanArray": "require( '@stdlib/assert/is-boolean-array' ).primitives;",
	"Buffer": "require( '@stdlib/assert/is-buffer' );",
	"Collection": "require( '@stdlib/assert/is-collection' );",
	"Complex": "require( '@stdlib/assert/is-complex' );",
	"Complex64": "require( '@stdlib/assert/is-complex64' );",
	"Complex128": "require( '@stdlib/assert/is-complex128' );",
	"Date": "a `Date` object",
	"Function": "require( '@stdlib/assert/is-function' );",
	"FunctionArray": "require( '@stdlib/assert/is-function-array' );",
	"Integer": "require( '@stdlib/assert/is-integer' );",
	"IntegerArray": "require( '@stdlib/assert/is-integer-array' );",
	"JSON": "require( '@stdlib/assert/is-json' );",
	"NegativeInteger": "require( '@stdlib/assert/is-negative-integer' );",
	"NegativeIntegerArray": "require( '@stdlib/assert/is-negative-integer-array' );",
	"NegativeNumber": "require( '@stdlib/assert/is-negative-number' );",
	"NonNegativeInteger": "require( '@stdlib/assert/is-nonnegative-integer' );",
	"NonNegativeIntegerArray": "require( '@stdlib/assert/is-nonnegative-integer-array' );",
	"NonPositiveInteger": "require( '@stdlib/assert/is-nonpositive-integer' );",
	"NonPositiveIntegerArray": "require( '@stdlib/assert/is-nonpositive-integer-array' );",
	"NonNegativeNumber": "require( '@stdlib/assert/is-nonnegative-number' );",
	"NonPositiveNumber": "require( '@stdlib/assert/is-nonpositive-number' );",
	"number": "require( '@stdlib/assert/is-number' ).isPrimitive;",
	"NumberArray": "require( '@stdlib/assert/is-number-array' ).primitives;",
	"NumericArray": "require( '@stdlib/assert/is-numeric-array' );",
	"Object": "require( '@stdlib/assert/is-object' );",
	"ObjectArray": "require( '@stdlib/assert/is-object-array' );",
	"ObjectLike": "require( '@stdlib/assert/is-object-like' );",
	"PlainObject": "require( '@stdlib/assert/is-plain-object' );",
	"PositiveInteger": "require( '@stdlib/assert/is-positive-integer' );",
	"PositiveIntegerArray": "require( '@stdlib/assert/is-positive-integer-array' ).primitives;",
	"PositiveNumber": "require( '@stdlib/assert/is-positive-number' );",
	"Probability": "require( '@stdlib/assert/is-probability' );",
	"ProbabilityArray": "require( '@stdlib/assert/is-probability-array' );",
	"UnityProbabilityArray": "require( '@stdlib/assert/is-union-probability-array' );",
	"RegExp": "require( '@stdlib/assert/is-regexp' );",
	"string": "require( '@stdlib/assert/is-string' ).isPrimitive;",
	"StringArray": "require( '@stdlib/assert/is-string-array' ).primitives;",
	"TypedArray": "require( '@stdlib/assert/is-typed-array' );",
	"URI": "require( '@stdlib/assert/is-uri' );"
}

