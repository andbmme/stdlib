/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require( 'tape' );
var isArray = require( '@stdlib/assert/is-array' );
var toArray = require( './../lib/to_array.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof toArray, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function converts a file cache object to an array', function test( t ) {
	var expected;
	var actual;
	var obj;

	obj = {
		'/home/beep.js': [
			'foo',
			'bar'
		],
		'/home/boop.js': [
			'bop',
			'bap'
		]
	};

	expected = [
		{
			'file': '/home/beep.js',
			'deps': [
				'foo',
				'bar'
			]
		},
		{
			'file': '/home/boop.js',
			'deps': [
				'bop',
				'bap'
			]
		}
	];

	actual = toArray( obj );

	t.equal( isArray( actual ), true, 'returns an array' );

	// Note: key iteration order is non-deterministic, so must account for result order variability...
	if ( actual[ 0 ].file === expected[ 0 ].file ) {
		t.deepEqual( actual, expected, 'returns expected results' );
	} else {
		t.deepEqual( actual, [ expected[1], expected[0] ], 'returns expected results' );
	}
	t.end();
});
