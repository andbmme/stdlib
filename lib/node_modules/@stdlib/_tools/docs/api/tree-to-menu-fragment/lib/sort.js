/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// FUNCTIONS //

/**
* Returns a comparison result. If `-1`, `a` comes before `b`. If `1`, `b` comes before `a`. If `0`, the order stays the same.
*
* @private
* @param {string} a - first string
* @param {string} b - second string
* @returns {boolean} comparison result
*/
function comparator( a, b ) {
	if ( a === '__namespace__' ) {
		return -1;
	}
	if ( b === '__namespace__' ) {
		return 1;
	}
	if ( a[ 0 ] === '_' && b[ 0 ] === '_' ) {
		return comparator( a.substring( 1 ), b.substring( 1 ) );
	}
	if ( a[ 0 ] === '_' ) {
		return 1;
	}
	if ( b[ 0 ] === '_' ) {
		return -1;
	}
	if ( a < b ) {
		return -1;
	}
	if ( a > b ) {
		return 1;
	}
	return 0;
}


// MAIN //

/**
* Sorts tree keys.
*
* @private
* @param {StringArray} keys - keys
* @returns {StringArray} sorted keys
*/
function sort( keys ) {
	return keys.sort( comparator );
}


// EXPORTS //

module.exports = sort;
