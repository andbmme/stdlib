/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var basename = require( 'path' ).basename;
var logger = require( 'debug' );
var hasOwnProp = require( '@stdlib/assert/has-own-property' );
var camelcase = require( './camelcase.js' );
var aliases = require( './aliases.js' );


// VARIABLES //

var debug = logger( 'bundle-pkg-list:pkg-to-alias' );


// MAIN //

/**
* Maps a package name to an alias.
*
* @private
* @param {string} id - package name
* @param {boolean} [flg=true] - boolean flag indicating whether, for known aliases, to return a full alias (e.g., `base.dist.cosine.pdf`) or alias basename (e.g., `pdf`)
* @returns {string} alias
*
* @example
* var out = pkg2alias( '@stdlib/math/base/special/erf' );
* // e.g., returns 'base.erf'
*
* @example
* var out = pkg2alias( '@stdlib/math/base/special/erf', true );
* // e.g., returns 'base.erf'
*
* @example
* var out = pkg2alias( '@stdlib/math/base/special/erf', false );
* // e.g., returns 'erf'
*
* @example
* var out = pkg2alias( '@stdlib/math/base/special/beep-boop' );
* // returns 'beepBoop'
*
* @example
* var out = pkg2alias( 'tape' );
* // returns 'tape'
*
* @example
* var out = pkg2alias( 'foo-bar' );
* // returns 'fooBar'
*/
function pkg2alias( id, flg ) {
	var alias;
	if ( hasOwnProp( aliases, id ) ) {
		alias = aliases[ id ];
		debug( 'Found a known alias for package %s: %s.', id, alias );
		if ( flg === false ) {
			debug( 'Extracting alias basename...' );
			alias = alias.split( '.' );
			alias = alias[ alias.length-1 ];
		}
	} else {
		debug( 'Failed to map package %s to a known alias.', id );

		alias = basename( id );
		debug( 'Package basename: %s.', alias );

		alias = camelcase( alias );
		debug( 'Generated alias: %s.', alias );
	}
	return alias;
}


// EXPORTS //

module.exports = pkg2alias;
