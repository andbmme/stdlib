(module
  (type (;0;) (func (param f64) (result i32)))
  (type (;1;) (func (param f64 f64) (result f64)))
  (type (;2;) (func))
  (import "env" "memoryBase" (global (;0;) i32))
  (import "global" "NaN" (global (;1;) f64))
  (import "env" "memory" (memory (;0;) 256))
  (import "env" "table" (table (;0;) 0 anyfunc))
  (import "env" "tableBase" (global (;2;) i32))
  (func (;0;) (type 0) (param f64) (result i32)
    get_local 0
    get_local 0
    f64.ne
    i32.const 0
    i32.or)
  (func (;1;) (type 1) (param f64 f64) (result f64)
    (local f64)
    get_local 0
    tee_local 2
    get_local 2
    f64.ne
    i32.const 0
    i32.or
    if (result f64)  ;; label = @1
      get_global 5
    else
      get_local 1
      tee_local 2
      get_local 2
      f64.ne
      i32.const 0
      i32.or
      if (result f64)  ;; label = @2
        get_global 5
      else
        get_local 0
        get_local 1
        f64.gt
        if (result f64)  ;; label = @3
          get_local 0
          get_local 1
          f64.sub
        else
          f64.const 0x0p+0 (;=0;)
        end
      end
    end)
  (func (;2;) (type 2)
    nop)
  (func (;3;) (type 2)
    get_global 0
    set_global 3
    get_global 3
    i32.const 5242880
    i32.add
    set_global 4)
  (global (;3;) (mut i32) (i32.const 0))
  (global (;4;) (mut i32) (i32.const 0))
  (global (;5;) (mut f64) (get_global 1))
  (export "__post_instantiate" (func 3))
  (export "_stdlib_base_is_nan" (func 0))
  (export "_stdlib_base_pdiff" (func 1))
  (export "runPostSets" (func 2)))
