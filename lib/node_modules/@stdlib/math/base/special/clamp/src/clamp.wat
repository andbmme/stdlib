(module
  (type (;0;) (func (param f64) (result i32)))
  (type (;1;) (func (param f64 f64 f64) (result f64)))
  (type (;2;) (func))
  (import "env" "memoryBase" (global (;0;) i32))
  (import "global" "NaN" (global (;1;) f64))
  (import "global" "Infinity" (global (;2;) f64))
  (import "env" "memory" (memory (;0;) 256))
  (import "env" "table" (table (;0;) 0 anyfunc))
  (import "env" "tableBase" (global (;3;) i32))
  (func (;0;) (type 0) (param f64) (result i32)
    get_local 0
    get_local 0
    f64.ne
    i32.const 0
    i32.or)
  (func (;1;) (type 0) (param f64) (result i32)
    f64.const 0x1p+0 (;=1;)
    get_local 0
    f64.div
    get_global 7
    f64.neg
    f64.eq)
  (func (;2;) (type 1) (param f64 f64 f64) (result f64)
    (local f64)
    block (result f64)  ;; label = @1
      get_local 0
      tee_local 3
      get_local 3
      f64.ne
      i32.const 0
      i32.or
      if (result f64)  ;; label = @2
        get_global 6
      else
        get_local 1
        tee_local 3
        get_local 3
        f64.ne
        i32.const 0
        i32.or
        if (result f64)  ;; label = @3
          get_global 6
        else
          get_local 2
          tee_local 3
          get_local 3
          f64.ne
          i32.const 0
          i32.or
          if (result f64)  ;; label = @4
            get_global 6
          else
            get_local 0
            get_local 1
            f64.lt
            if (result f64)  ;; label = @5
              get_local 1
            else
              get_local 0
              get_local 2
              f64.gt
              if (result f64)  ;; label = @6
                get_local 2
              else
                get_local 1
                f64.const 0x0p+0 (;=0;)
                f64.eq
                if  ;; label = @7
                  get_local 1
                  f64.const 0x1p+0 (;=1;)
                  get_local 0
                  tee_local 1
                  f64.div
                  get_global 7
                  f64.neg
                  f64.eq
                  br_if 6 (;@1;)
                  drop
                end
                get_local 0
                f64.const 0x0p+0 (;=0;)
                f64.eq
                if  ;; label = @7
                  get_local 2
                  f64.const 0x1p+0 (;=1;)
                  get_local 2
                  f64.div
                  get_global 7
                  f64.neg
                  f64.eq
                  br_if 6 (;@1;)
                  drop
                end
                get_local 0
              end
            end
          end
        end
      end
    end)
  (func (;3;) (type 2)
    nop)
  (func (;4;) (type 2)
    get_global 0
    set_global 4
    get_global 4
    i32.const 5242880
    i32.add
    set_global 5)
  (global (;4;) (mut i32) (i32.const 0))
  (global (;5;) (mut i32) (i32.const 0))
  (global (;6;) (mut f64) (get_global 1))
  (global (;7;) (mut f64) (get_global 2))
  (export "__post_instantiate" (func 4))
  (export "_stdlib_base_clamp" (func 2))
  (export "_stdlib_base_is_nan" (func 0))
  (export "_stdlib_base_is_negative_zero" (func 1))
  (export "runPostSets" (func 3)))
